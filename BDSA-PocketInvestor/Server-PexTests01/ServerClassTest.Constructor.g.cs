// <copyright file="ServerClassTest.Constructor.g.cs" company="Hewlett-Packard">Copyright © Hewlett-Packard 2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace Server
{
    public partial class ServerClassTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException82()
{
    try
    {
      ServerClass serverClass;
      serverClass = this.Constructor("\0\0", (string)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException880()
{
    try
    {
      ServerClass serverClass;
      serverClass = this.Constructor("\u0100", "\u0100");
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException910()
{
    try
    {
      ServerClass serverClass;
      serverClass = this.Constructor("\u0100", (string)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException895()
{
    try
    {
      ServerClass serverClass;
      serverClass = this.Constructor("\0", (string)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException389()
{
    try
    {
      ServerClass serverClass;
      serverClass = this.Constructor("", (string)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException777()
{
    try
    {
      ServerClass serverClass;
      serverClass = this.Constructor((string)null, (string)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
