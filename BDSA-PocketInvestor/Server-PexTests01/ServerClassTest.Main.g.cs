// <copyright file="ServerClassTest.Main.g.cs" company="Hewlett-Packard">Copyright © Hewlett-Packard 2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace Server
{
    public partial class ServerClassTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void MainThrowsContractException306()
{
    try
    {
      string[] ss = new string[2];
      ss[0] = "\u0089";
      ss[1] = "\u0089";
      this.Main(ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void MainThrowsContractException910()
{
    try
    {
      string[] ss = new string[2];
      ss[0] = "\u0100";
      ss[1] = "\u0100";
      this.Main(ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void MainThrowsContractException972()
{
    try
    {
      string[] ss = new string[1];
      ss[0] = "\u0100";
      this.Main(ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void MainThrowsContractException137()
{
    try
    {
      string[] ss = new string[1];
      ss[0] = "\0";
      this.Main(ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void MainThrowsContractException830()
{
    try
    {
      string[] ss = new string[1];
      ss[0] = "";
      this.Main(ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void MainThrowsContractException580()
{
    try
    {
      string[] ss = new string[1];
      this.Main(ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void MainThrowsContractException442()
{
    try
    {
      string[] ss = new string[0];
      this.Main(ss);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(ServerClassTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void MainThrowsContractException909()
{
    try
    {
      this.Main((string[])null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
